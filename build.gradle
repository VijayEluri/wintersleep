allprojects {

}

subprojects {

  project.ext.aspectjVersion = '1.7.1'
  project.ext.hibernateVersion = '3.6.10.Final'
  project.ext.jettyVersion = '6.1.26'
  project.ext.mysqlVersion = '5.1.22'
  project.ext.slf4jVersion = '1.7.2'
  project.ext.springVersion = '3.1.3.RELEASE'
  // 3.2.0 does not work because of: https://jira.springsource.org/browse/SPR-10108
  //project.ext.springVersion = '3.2.0.RELEASE'
  // should work in 3.2.1
  //project.ext.springVersion = '3.2.1.RELEASE'
  project.ext.wicketVersion = '1.4.21'

  apply plugin: 'java'
  apply plugin: 'project-report'
  apply from: 'https://github.com/breskeby/gradleplugins/raw/master/emmaPlugin/emma.gradle'
  //apply plugin: 'findbugs'

  repositories {
    mavenCentral()

    maven {
      url 'http://databinder.net/repo'
    }
  }

  version = System.properties['version'] ? System.properties['version'] : 'SNAPSHOT'

  task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  task testsJar(type: Jar) {
    classifier = 'tests'
    from sourceSets.test.output
  }

  task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
  }

  configurations {
    tests {

    }

    all {

      exclude(group: 'commons-logging', module: 'commons-logging')
      exclude(group: 'commons-logging', module: 'commons-logging-api')
      exclude(group: 'hsqldb', module: 'hsqldb')
      exclude(group: 'javassist', module: 'javassist')
      exclude(group: 'org.hibernate', module: 'hibernate-annotations')
      exclude(group: 'org.hibernate', module: 'hibernate-c3p0')
      exclude(group: 'org.mortbay.jetty', module: 'servlet-api')

      resolutionStrategy {
        failOnVersionConflict()

        forcedModules = [
                'com.intellij:annotations:9.0.4',
                'com.sun.facelets:jsf-facelets:1.1.14',
                'cglib:cglib:2.2.2',
                'cglib:cglib-nodep:2.2.2',
                'commons-collections:commons-collections:3.2.1',
                'commons-dbcp:commons-dbcp:1.4',
                'javax.el:el-api:2.2.1-b04',
                'javax.faces:jsf-api:1.2_08',
                'javax.faces:jsf-impl:1.2_08',
                'javax.servlet:servlet-api:2.5',
                'javax.transaction:jta:1.1',
                'junit:junit:4.11',
                'log4j:log4j:1.2.17',
                'mysql:mysql-connector-java:' + mysqlVersion,
                'net.databinder:databinder-app-hib:1.3.0',
                'org.acplt:oncrpc:1.0.7',
                'org.apache.xmlbeans:xmlbeans:2.6.0',
                'org.apache.wicket:wicket:' + wicketVersion,
                'org.apache.wicket:wicket-auth-roles:' + wicketVersion,
                'org.apache.wicket:wicket-extensions:' + wicketVersion,
                'org.apache.wicket:wicket-spring:' + wicketVersion,
                'org.aspectj:aspectjrt:' + aspectjVersion,
                'org.aspectj:aspectjweaver:' + aspectjVersion,
                'org.hibernate:hibernate-commons-annotations:3.2.0.Final',
                'org.hibernate:hibernate-core:' + hibernateVersion,
                'org.hibernate:hibernate-testing:' + hibernateVersion,
                'org.hibernate:hibernate-tutorial-eg:3.5.0.Beta-1',
                'org.javassist:javassist:3.17.1-GA',
                'org.jboss.logging:jboss-logging:3.1.2.GA',
                'org.jboss.jbossts.arjunacore:arjuna:4.17.3.Final',
                'org.jboss.jbossts.jta:narayana-jta:4.17.3.Final',
                'org.mortbay.jetty:jetty:' + jettyVersion,
                'org.mortbay.jetty:jetty-util:' + jettyVersion,
                'org.slf4j:slf4j-api:' + slf4jVersion,
                'org.slf4j:slf4j-log4j12:' + slf4jVersion,
                'org.slf4j:jcl-over-slf4j:' + slf4jVersion,
                'org.springframework:spring-aop:' + springVersion,
                'org.springframework:spring-asm:' + springVersion,
                'org.springframework:spring-aspects:' + springVersion,
                'org.springframework:spring-beans:' + springVersion,
                'org.springframework:spring-context:' + springVersion,
                'org.springframework:spring-core:' + springVersion,
                'org.springframework:spring-expression:' + springVersion,
                'org.springframework:spring-instrument:' + springVersion,
                'org.springframework:spring-jdbc:' + springVersion,
                'org.springframework:spring-orm:' + springVersion,
                'org.springframework:spring-test:' + springVersion,
                'org.springframework:spring-tx:' + springVersion,
                'org.springframework:spring-web:' + springVersion,
                'org.springframework:spring-webmvc:' + springVersion,
                'org.springframework.security:spring-security-core:3.0.3.RELEASE',
                'org.springframework.webflow:org.springframework.binding:2.0.5.RELEASE',
                'org.springframework.webflow:org.springframework.js:2.0.5.RELEASE',
                'org.springframework.webflow:org.springframework.webflow:2.0.5.RELEASE',
                'org.springframework.webflow:org.springframework.faces:2.0.5.RELEASE',
                'xml-apis:xml-apis:1.3.02'
        ]
      }
    }

    artifacts {
      archives jar
      archives sourcesJar
      archives javadocJar
      archives testsJar
      tests testsJar
    }

    findbugs {
      resolutionStrategy {
        failOnVersionConflict()
        force 'xml-apis:xml-apis:2.0.2'
      }
    }
  }

  test {
    jvmArgs "-Demma.coverage.out.file=build/tmp/emma/metadata.emma", "-Demma.coverage.out.merge=true"

    doFirst {
      ant.taskdef(resource: "emma_ant.properties", classpath: configurations.emma.asPath)
      ant.path(id: "run.classpath") {
        pathelement(location: sourceSets.main.output.classesDir.absolutePath)
      }
      ant.emma(verbosity: 'info') {
        instr(merge: "true", destdir: 'build/tmp/emma/instr', instrpathref: "run.classpath", metadatafile: 'build/tmp/emma/metadata.emma') {
          instrpath {
            fileset(dir: sourceSets.main.output.classesDir.absolutePath, includes: "*.class")
          }
        }
      }
      setClasspath(files("$buildDir/tmp/emma/instr") + configurations.emma + getClasspath())
    }
  }

}
